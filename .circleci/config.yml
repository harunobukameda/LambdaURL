# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  deploy-lambda:
    # Use an AWS-compatible Docker image
    docker:
      - image: cimg/python:3.9-node

    # Add steps to the job
    steps:
      # Checkout the code as the first step.
      - checkout
      
      # Set up Node.js environment
      - run:
          name: "Set up Node.js environment"
          command: |
            npm install
      
      # Run linting and tests
      - run:
          name: "Run linting and tests"
          command: |
            npm run lint || echo "Linting issues found, but continuing deployment"
            npm test
      
      # Install AWS CLI
      - run:
          name: "Install AWS CLI"
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
      
      # Configure AWS credentials
      - run:
          name: "Configure AWS credentials"
          command: |
            mkdir -p ~/.aws
            echo "[default]" > ~/.aws/credentials
            echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
            echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials
            echo "[default]" > ~/.aws/config
            echo "region = $AWS_REGION" >> ~/.aws/config
            echo "output = json" >> ~/.aws/config
      
      # Create deployment package
      - run:
          name: "Create deployment package"
          command: |
            mkdir -p deploy
            cp index.mjs deploy/
            cd deploy
            zip -r lambda_function.zip .
      
      # Deploy Lambda function with URL
      - run:
          name: "Deploy Lambda function with URL"
          command: |
            # Check if Lambda function exists
            if aws lambda get-function --function-name LambdaURL 2>&1 | grep -q "Function not found"; then
              # Create new Lambda function with URL
              echo "Creating new Lambda function with URL..."
              aws lambda create-function \
                --function-name LambdaURL \
                --runtime nodejs18.x \
                --handler index.handler \
                --zip-file fileb://deploy/lambda_function.zip \
                --role $AWS_LAMBDA_ROLE_ARN
              
              # Create function URL
              aws lambda create-function-url-config \
                --function-name LambdaURL \
                --auth-type NONE
            else
              # Update existing Lambda function
              echo "Updating existing Lambda function..."
              aws lambda update-function-code \
                --function-name LambdaURL \
                --zip-file fileb://deploy/lambda_function.zip
              
              # Check if URL config exists, create if not
              if ! aws lambda get-function-url-config --function-name LambdaURL 2>/dev/null; then
                aws lambda create-function-url-config \
                  --function-name LambdaURL \
                  --auth-type NONE
              fi
            fi
            
            # Get and display the Lambda URL
            aws lambda get-function-url-config --function-name LambdaURL

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  deploy-lambda-workflow:
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - deploy-lambda:
          # Only run on main branch
          filters:
            branches:
              only: main
